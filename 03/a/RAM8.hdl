// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in = load, sel = address,a = w1,b = w2,c = w3,d = w4,e = w5,f = w6,g = w7,h = w8);
	Register(in = in,load = w1,out = ow1);
	Register(in = in,load = w2,out = ow2);
	Register(in = in,load = w3,out = ow3);
	Register(in = in,load = w4,out = ow4);
	Register(in = in,load = w5,out = ow5);
	Register(in = in,load = w6,out = ow6);
	Register(in = in,load = w7,out = ow7);
	Register(in = in,load = w8,out = ow8);
	Mux8Way16(a = ow1,b = ow2,c = ow3,d = ow4,e = ow5,f = ow6,g = ow7,h = ow8,sel = address,out = out);
}